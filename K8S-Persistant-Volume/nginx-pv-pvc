
# Creating NfS Persistant Volume 
apiVersion: v1
kind: PersistentVolume
metadata:
  name: nfs-pv1
spec:
  capacity:
    storage: 1Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteMany
  mountOptions:
  nfs:
    path: /nfsshare/nfs-pv1
    server: 192.168.1.56

---

# Creating Persistant Volume Claim (pvc)
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: nfs-pvc1
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 1Gi

---

# Deployment definition
apiVersion: apps/v1
kind: Deployment
metadata:
  name: candoweb
  labels: 
    app: candoweb

spec:
  replicas: 3
  selector:
    matchLabels:
      app: candoweb
  template:
    metadata:
      labels: 
        app: candoweb
    spec:
      volumes:
        - name: nginx-pvc
          persistentVolumeClaim:
            claimName: nfs-pvc1
      containers:
      - name: nginx
        image: nginx:latest
        ports: 
          - name: conport
            containerPort: 80
        volumeMounts:
          - mountPath: "/usr/share/nginx/html"
            name: nginx-pvc

---

# Service for our deployment
apiVersion: v1
kind: Service
metadata:
  name: nginx-s
spec:
  type: ClusterIP
  selector:
    app: candoweb
  ports:
    - port: 80
      targetPort: 80
      # Optional field
      # By default and for convenience, the Kubernetes control plane will allocate a port from a range (default: 30000-32767)
---

# Ingress Controller - We are using Nginx revers proxy ingress controller
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: candoweb
spec:
  rules:
  - host: test.persival.ir
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: nginx-s
            port:
              number: 80
  - host: test1.persival.ir
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: nginx-s
            port:
              number: 80
  - host: test2.persival.ir
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: nginx-s
            port:
              number: 80
  ingressClassName: nginx
